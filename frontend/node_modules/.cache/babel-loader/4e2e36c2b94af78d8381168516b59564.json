{"ast":null,"code":"var initialState = {\n  posts: [],\n  filter_category: ''\n};\n\nfunction postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_POSTS_SUCCESS\":\n      console.log('fetch post success');\n      return {\n        posts: action.payload.posts\n      };\n\n    case \"FETCH_POSTS_FAILURE\":\n      console.log('fetch post fail');\n      return state;\n\n    case \"FILTER_POSTS\":\n      console.log(state, action);\n      return {\n        posts: state.filter(function (post) {\n          return post.category === action.payload.category;\n        })\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;","map":{"version":3,"sources":["/Users/thompsonteng/Documents/CS498_web/final_project/frontend/src/reducer/postReducer.js"],"names":["initialState","posts","filter_category","postReducer","state","action","type","console","log","payload","filter","post","category"],"mappings":"AAAA,IAAMA,YAAY,GAAG;AACbC,EAAAA,KAAK,EAAE,EADM;AAEbC,EAAAA,eAAe,EAAE;AAFJ,CAArB;;AAKA,SAASC,WAAT,GAAiD;AAAA,MAA5BC,KAA4B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACzC,UAAQA,MAAM,CAACC,IAAf;AACQ,SAAK,qBAAL;AACQC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,aAAO;AACCP,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAAP,CAAeR;AADvB,OAAP;;AAGR,SAAK,qBAAL;AACQM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAOJ,KAAP;;AAER,SAAK,cAAL;AACQG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,MAAnB;AACA,aAAO;AACCJ,QAAAA,KAAK,EAAEG,KAAK,CAACM,MAAN,CAAa,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,QAAL,KAAgBP,MAAM,CAACI,OAAP,CAAeG,QAAnC;AAAA,SAAjB;AADR,OAAP;;AAGR;AACQ,aAAOR,KAAP;AAhBhB;AAmBP;;AAED,eAAeD,WAAf","sourcesContent":["const initialState = {\n        posts: [],\n        filter_category: '',\n}\n\nfunction postReducer(state=initialState, action) {\n        switch (action.type){\n                case \"FETCH_POSTS_SUCCESS\":\n                        console.log('fetch post success')\n                        return {\n                                posts: action.payload.posts\n                        };\n                case \"FETCH_POSTS_FAILURE\":\n                        console.log('fetch post fail')\n                        return state;\n\n                case \"FILTER_POSTS\":\n                        console.log(state, action);\n                        return {\n                                posts: state.filter(post => post.category===action.payload.category)\n                        };\n                default:\n                        return state;\n        }\n\n}\n\nexport default postReducer;\n"]},"metadata":{},"sourceType":"module"}